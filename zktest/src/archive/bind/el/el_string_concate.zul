<zk>
	<window apply="org.zkoss.bind.BindComposer" viewModel="@id('vm') @init('org.zkoss.zktest.bind.el.ElStringConcate')">
	
		@load((Math.sqrt(16))):
		<label value="@load((Math.sqrt(16)))"></label>
		<separator></separator>
		@load(([1, 2, 3, 4].get(3))):
		<label value="@load(([1, 2, 3, 4].get(3)))"></label>
		<separator></separator>
		@command('click', key=(vm.value+=(x -> x + 1)(5))))
		<button onClick="@command('click', key=(vm.value+=(x -> x + 1)(5))))">click</button>
		<separator></separator>
		@command('click', key=(incr = x -> x + 1; vm.value += incr(10)))
		<button onClick="@command('click', key=(incr = x -> x + 1; vm.value += incr(10)))">click</button>
		<separator></separator>
		vm.value:
		<label value="@load(value=vm.value)"></label>
		<separator></separator>
		@load((incr = x -> x+1; vm.value += incr(5)): 
		<label value="@load((incr = x -> x + 1; vm.value += incr(5)))"></label>
		<separator></separator>
		@load((vm.value += 'hi'): 
		<label value="@load((vm.value += 'hi'))"></label>
		<separator></separator>
		xx = vm.value; xx + vm.value: 
		<label value="${xx = vm.value; xx += vm.value}"></label>
		<separator></separator>
		'one ' += vm.value += ' two': 
		<label value="${'one ' += vm.value += ' two'}"></label>
		<separator></separator>
		(x -> x+1)(10): 
		<label value="${(x -> x+1)(10)}"></label>
		<separator></separator>
		incr = x -> x+1; incr(10):
		<label value="${incr = x -> x+1; incr(10)}"></label>
		<separator></separator>
		[1, 2, 3, 4].get(3): 
		<label value="${[1, 2, 3, 4].get(3)}"></label>
		<separator></separator>
		fact(5): 
		<label value="${fact = n-> n == 0 ? 1 : n * fact(n-1); fact(5)}"></label>
	</window>
</zk>