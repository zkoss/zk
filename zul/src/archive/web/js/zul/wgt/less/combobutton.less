@import "~./zul/less/_header.less";

.z-combobutton {
	display: inline-block;
	min-height: @baseButtonHeight;
	
	&-content {
		font-family: @baseContentFontFamily;
		font-size: @fontSizeMedium;
		font-weight: normal;
		padding: 4px 30px 4px 5px;
		border: 1px solid @buttonBorderColor;
		min-height: @baseButtonHeight;
		<c:if test="${zk.ie != 8}">
			.verGradient(@buttonGradientStart, @buttonGradientEnd);
		</c:if>
		line-height: @baseLineHeight;
		.borderRadius(@borderRadiusSmall);
		color: @baseTextColor;
		position: relative;
		cursor: default;
		display: inline-block;
		vertical-align: middle;
		white-space: nowrap;
	}
	&-image {
		vertical-align: middle;
	}
	&-button {
		cursor: pointer;
		border-left: 1px solid @buttonBorderColor;
		display: block;
		width: @baseButtonWidth;
		height: 100%;
		position: absolute;
		top: 0;
		right: 0;
		line-height: normal;
		font-weight: normal;
		button[disabled] + & {
			&:hover,
			&:active {
				border-color: @buttonBorderColor;
				.resetGradient();
				.boxShadow('none');
			}
		}
	}
	&-icon {
		font-size: @fontSizeLarge;
		color: @iconColor;
		&.z-icon-caret-down {
			display: block;
			position: absolute;
			top: 50%;
			margin-top: -8px;
			left: 7px;
		}
	}
	&:hover {
		.z-combobutton-content,
		.z-combobutton-button {
			border-color: @hoverBorderColor;
			<c:if test="${zk.ie != 8}">
				.verGradient(@hoverGradientStart, @hoverGradientEnd);
			</c:if>
		}
	}
	&:focus {
		.z-combobutton-content,
		.z-combobutton-button {
			color: @focusColor;
			border-color: @focusBorderColor;
			.verGradient(@focusGradientStart, @focusGradientEnd);
			.boxShadow('inset 0 0 2px #0CBCFF');
		}
		.z-combobutton-button {
			border-left-color: @baseBorderColor;
		}
	}
	&:active {
		.z-combobutton-content,
		.z-combobutton-button {
			border-color: @activeBorderColor;
			.verGradient(@activeGradientStart, @activeGradientEnd);
		}
	}
	
	//toolbar mold
	&-toolbar {
		.z-combobutton-content,
		.z-combobutton-button {
			border-color: transparent;
			.borderRadius(0);
			.resetGradient();
		}
		&:focus {
			.z-combobutton-content,
			.z-combobutton-button {
				border-color: transparent;
				.boxShadow('none');
			}
		}
		&:active {
			.z-combobutton-content,
			.z-combobutton-button {
				border-color: @hoverBorderColor;
				.verGradient(@hoverGradientStart, @hoverGradientEnd);
			}
		}
	}
}

.ie8 .z-combobutton {
	min-height: @baseButtonHeight - 10;
	
	&-content {
		.gradientFallback();
		min-height: @baseButtonHeight - 10;
	}

	&:hover {
		.z-combobutton-content,
		.z-combobutton-button {
			background: @hoverGradientEnd;
		}
	}
}