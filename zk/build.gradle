plugins {
	id 'java-library'
	id 'checkstyle'
	id 'com.github.gmazzo.buildconfig'
	id 'idea'
}

idea {
	module {
		outputDir file("$buildDir/classes/main")
		testOutputDir file("$buildDir/classes/test")
	}
}

java {
	// Declaring feature variants for optionalImplementation, to generate dependency optional in pom
	registerFeature('optional') {
		usingSourceSet(sourceSets.main)
	}
}

dependencies {
	api project(':zweb')
	api project(':zkwebfragment')
	api 'commons-fileupload:commons-fileupload:1.5'
	api 'commons-io:commons-io:2.8.0'
	compileOnly "javax.servlet:servlet-api:${servletVersion}"
	compileOnly "javax.portlet:portlet-api:${portletVersion}"
	compileOnly 'javax.websocket:javax.websocket-api:1.1'
	implementation('com.google.guava:guava:32.1.2-jre') {
		exclude group: '*', module: '*'
	}
	optionalImplementation 'com.google.javascript:closure-compiler-unshaded:v20230802'
	optionalImplementation 'org.apache.groovy:groovy:5.0.0-alpha-1'
	optionalImplementation('org.jruby:jruby-core:1.7.27') {
		exclude group: '*', module: '*'
	}
	optionalImplementation 'org.python:jython:2.2.1'
	optionalImplementation 'org.mozilla:rhino:1.7.14'
}

buildConfig {
	className = 'Version'
	packageName = "org.zkoss.${project.name}"
	buildConfigField("String", "UID", provider { "\"${project.version}\"" })
	buildConfigField("String", "RELEASE", provider { "\"${project.version}\"" })
}

task gentime(type: Exec) {
	workingDir "$rootDir/bin"
	commandLine './gentime', "$projectDir/codegen/resources/metainfo/zk/build"
}

gentime.mustRunAfter(compileJava)
processResources.dependsOn(gentime)

description = 'ZK Kernel'